# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb


dist/
build/

node_modules/

.vscode/
.idea/

.env
.env.local
.env.*.local

*.tsbuildinfo

# Log files
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

input.txt
input_example.txt
input_example_b.txt
puzzle_*.md

## Python
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
venv/
build/
develop-eggs/
dist/
downloads/
eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
# Usually these files are written by a python script from a template
# before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/
.coverage

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
.idea/
*.iml

# VS Code
.vscode/
*.code-workspace

# pytest
*.pytest_cache/

# Others
.DS_Store
Thumbs.db

# Added by cargo

/target

## Rust

# Compiled files
/target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information: https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# If you use Visual Studio Code, you might want to include the following:
.vscode/

# If you're using vim or emacs, you might want to include the following:
*.swp
*~
/project_name

# If you use IntelliJ IDEA-based editors (like CLion), you might want to include:
.idea/
*.iml

# The directory `.rustup` and `.cargo` are used to store user-specific Rust versions and cargo metadata
.rustup/
.cargo/

# You should also ignore any local configuration files that might contain user-specific or sensitive data
**/config/local_*

# MacOS-specific
.DS_Store